(()=>{"use strict";const t=t=>{let e=(()=>{const t=[],e=[];for(let e=0;e<10;e++){t[e]=[];for(let r=0;r<10;r++)t[e].push(!1)}function r(e,r,o,i){if("h"===i){if(o+e>10)return!1;for(let i=0;i<e;i++)if(t[r][o+i].hasOwnProperty("ship"))return!1;return!0}if("v"===i){if(r+e>10)return!1;for(let i=0;i<e;i++)if(t[r+i][o].hasOwnProperty("ship"))return!1;return!0}}return{board:t,missedShots:e,placeShip:(e,o,i,s)=>{const a=(t=>{const e=[];for(let r=0;r<t;r++)e.push({hit:!1});const r=e.length;return{shipArr:e,getLength:r,hit:t=>(e[t].hit=!0,e),isSunk:()=>{if(e.every((t=>1==t.hit)))return!0},domTargets:[]}})(e);let l=0;if(t[o][i])return!1;if("h"===s&&r(e,o,i,s))for(let r=0;r<e;r++)t[o][i+r]={ship:a,shipPos:l},l++;else{if("v"!==s||!r(e,o,i,s))return!1;for(let r=0;r<e;r++)t[o+r][i]={ship:a,shipPos:l},l++}},receiveAttack:(r,o)=>{if(t[r][o].hasOwnProperty("ship")){let e=t[r][o].shipPos;return t[r][o].ship.hit(e),e="hit",e}return t[r][o]="miss",e.push([r,o]),t[r][o]},allShipsSunk:()=>{let e=[];for(let r of t)for(let t of r)t.hasOwnProperty("ship")&&e.push(t.ship.isSunk());return e.every((t=>1==t))}}})(),r=!1;function o(t){let r=Math.floor(10*Math.random()),o=Math.floor(10*Math.random()),i=Math.round(Math.random());return(0!==i||(i="h",0!=e.placeShip(r,o,t,i)))&&(1!==i||(i="v",0!=e.placeShip(r,o,t,i)))&&void 0}return{name:t,board:e,playerTurn:t=>{r=!0,t.turn=!1},atk:(t,e,r)=>t.board.receiveAttack(e,r),randFleet:()=>{for(let t=0;t<2;)0!=o(1)&&t++;for(let t=0;t<2;)0!=o(2)&&t++;for(let t=0;t<2;)0!=o(3)&&t++;for(let t=0;t<2;)0!=o(4)&&t++}}};function e(t,e,r,o,i){let s=o.atk(i,e,r);if(s)return"miss"===s&&t.target.classList.add("miss"),"hit"===s?(t.target.classList.add("hit"),i.board.board[e][r].ship.domTargets.push(t.target),void(i.board.board[e][r].ship.isSunk()&&i.board.board[e][r].ship.domTargets.forEach((t=>t.classList.add("sunk"))))):void 0}let r=t("me"),o=t("ai");!function(t,r){for(let e=0;e<10;e++){let r=document.createElement("div");r.classList.add("row-p1"),r.setAttribute("id",`p1-row${e}`),document.querySelector(".player-board").appendChild(r),t.board.board[e].forEach(((t,o)=>{let i=document.createElement("div");i.classList.add("cell-p1"),i.setAttribute("id",`p1-row${e}-cell${o}`),r.appendChild(i)}))}for(let o=0;o<10;o++){let i=document.createElement("div");i.classList.add("row-p2"),i.setAttribute("id",`p2-row${o}`),document.querySelector(".op-board").appendChild(i),r.board.board[o].forEach(((s,a)=>{let l=document.createElement("div");l.classList.add("cell-p2"),l.setAttribute("id",`p2-row${o}-cell${a}`),i.appendChild(l),l.addEventListener("click",(i=>{e(i,o,a,t,r)}))}))}}(r,o),r.randFleet(),o.randFleet(),function(t){document.querySelectorAll(".cell-p1").forEach(((e,r)=>{let o,i,s=""+r;r<10?(o=0,i=r):(s=s.split(""),o=s[0],i=s[1]),t.board.board[o][i]&&e.classList.add("fleet")}))}(r)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,